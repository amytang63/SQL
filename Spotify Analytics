--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert the Spotify data into.
--Lastly, I performed data analytics on the Spotify data using SQL.

--Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--Then I inserted the data into the table.

--Next, I explored the data using SQL.

1. Who was the artist with highest popularity and what was their popularity score?
SELECT Spotifydata.artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 1

2. Who are the top 10 artists based on popularity?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10

3. What artist released the longest song?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1

4. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH AveragePopularity AS (
SELECT Spotifydata.artist_name, AVG(Spotifydata.popularity) AS averagePopularity
FROM Spotifydata
GROUP BY Spotifydata.artist_name
)
SELECT artist_name, averagePopularity, 'Top Star' AS tag
FROM AveragePopularity
WHERE averagePopularity >= 90
