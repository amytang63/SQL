--In this SQL Code, I am querying a database that contains a digital media store's data and includes tables for artists, albums, media tracks, invoices, and customers.

1. Show Customers (their full names, customer ID, and country) who are not in the US.BIT_DB
SELECT customers.FirstName, customers.LastName,
customers.CustomerId, 
Country
FROM chinook.customers
WHERE Country <> 'USA';

2. Show only the Customers from Brazil.
SELECT * 
FROM chinook.customers
WHERE Country = 'Brazil';

3. Find the Invoices of customers who are from Brazil.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE invoices.BillingCountry = 'Brazil';

4. Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct invoices.BillingCountry
FROM chinook.invoices;

6. Provide a query that shows the invoices associated with each sales agent.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON invoices.CustomerId = customers.CustomerId;

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName, customers.LastName, customers.Country, employees.FirstName, employees.LastName
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId;

8.How many Invoices were there in 2009?
SELECT Count(*)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

9. What are the total sales for 2009?
SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

10.Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId;

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS TrackName, artists.Name AS ArtistName, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId
JOIN albums
ON tracks.AlbumId = albums.AlbumId
JOIN artists
ON albums.ArtistId = artists.ArtistId;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track, albums.Title, media_types.Name AS MediaType, genres.Name AS Genre
FROM tracks
JOIN albums
ON tracks.AlbumId = albums.AlbumId
JOIN media_types
ON tracks.MediaTypeId = media_types.MediaTypeId
JOIN genres
ON tracks.GenreId = genres.GenreId;

13. Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS 'Total Sales'
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE Title = 'Sales Support Agent'
GROUP BY employees.FirstName;

14. Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS 'Total Sales'
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE Title = 'Sales Support Agent' AND InvoiceDate LIKE '2009%'
GROUP BY employees.FirstName 
ORDER BY ROUND(SUM(invoices.Total), 2) desc
LIMIT 1;
